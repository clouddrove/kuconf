name: Build

on:
  push:
    branches:
      - "**"

env:
  GO_VERSION: '1.21'

jobs:
  build:
    name: Run checks and build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ./.go-cache
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Download dependencies
        run: go mod download

      - name: Vet
        run: make vet

      - name: Test
        run: make test

      - name: Build
        run: make

  format:
    name: Code Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Get unformatted files
        id: unformatted
        run: |
          unformatted=$(gofmt -l .)
          if [ -n "$unformatted" ]; then
            echo "::error::Unformatted files found:"
            echo "$unformatted"
            echo "unformatted=true" >> $GITHUB_OUTPUT
          fi

      - name: Format files
        if: steps.unformatted.outputs.unformatted == 'true'
        run: |
          gofmt -w .
          echo "::warning::Auto-formatted files. Please commit these changes."
          git diff --name-only
          exit 1